package com.e16din.fasttaxi

object Plan {
// Сделать приложение такси за месяц

  fun day9() {
    // MainScreen
    "Показать выбранные точки на карте"
//    "Показать выбранные точки в деталях заказа"
//    "Обновлять состояние кнопки \"Заказать\""
  }

  fun day8() {
    // PART 1
    // SelectPointScreen
//    "Протестировать функционал выбора адреса, доработать если надо, добавить проверочные тест-кейсы(условия)"
//    "Подрефакторить общие функции doAction"

    // добавлены блоки feature()
    // доработана логика SelectPointsScreen
    // добавлен класс для сохранения/восстановления локальных данных
    // сделано сохранение/восстановление сессии по токену

    // PART 2
    "Подключить Yandex Geocoder для поиска по адресам"

    // MainScreen
    " Показать выбранные точки на карте и в деталях заказа"
    "Прочертить маршрут между точками"
    "Открыть по кнопке \"Заказать\" экран поиска машины"

    // SearchCarScreen
    "Проработать функционал..."

    "Сделать три разные функции onDataSourceEvent() onUserEvent() onSystemEvent()"

    "Добавить логаут"
  }

  fun day7() {
    // Убрал рудименты с типами субъектов
    // Убрал варнинги
    // ПОдрефакторил код
  }
// DAY 6:

// Project
// Устранить варнинг что подсвечивается на doAction/onEvent


// DAY 5 part 1:

// Что сделано:

// Заинлайнить экшены
// Заинлайнить эвенты
// Убрать классы архитектуры
// экшены и эвенты навешивать на объекты акторов,
// акторы будут указывать на принадлежность, больше ничего
// Можно прям объект актора создать, чтобы это было OOP
// BaseActor.doAction("action") {}
// BaseActor.onEvent("event") {}

// DAY 3 part 2

// Что сделано

// Добавил сценарии по типу BDD
// Починил баг с хэндлером
// Почистил чуть-чуть код

// DAY 3 part 1

/// Подготовка, планирование

// - Рефакторинг, убрать лишнее
// - Доработать авторизацию, сохранять данные профиля в файл, при входе смотреть на сохраненные действия
// - Добавить разлогин по ошибке 401 от сервера

/// Работа, реализация

// сделал только первый пункт, за 30 минут а не за 20

// почистил код (быстро)

// добавил проверки checkConditions(),
// увидел что это неудобно и громоздко, что затруднит разработку в будущем,
// экспериментировал, искал оптимальное решение (долго)

// доработал checkConditions() (быстро)

/// Передача, поставка

// ...


// DAY 2

/// Подготовка, планирование


// Работа, реализация

// Заняло больше запланированного времени

// Передача, поставка

// Не сделано:
// - Шторка выбора адреса
//    - 2 поля ввода адреса, старт и финиш
//    - список адресов
//    - переключаясь между полями выбора адреса - обновлять список

// Сделано:
// - Проверка условий, библиотека (проверено!)
}
